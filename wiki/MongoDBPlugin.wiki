#labels MongoDBPlugin,Featured,MongoDBPlugin
=MongoDB Plugin=


==Overview==

The *MongoDB Plugin* can be used to monitor standalone, replicated as well as clustered MongoDB instances. The plugin monitors availability, resource utilization, health, performance and other important metrics of a MongoDB environment. Coupled with the Zabbix OS level monitoring, the MongoDB plugin provides great peace of mind knowing that MongoDB is being monitored 24x7 and sufficient data would be available for sizing, scalability, troubleshooting and support.


==Setup and Configuration==

The MongoDB plugin uses the MongoDB PHP driver which needs to be installed on the Zabbix server.  For this, install and setup the following packages:
  * *php5-dev (or php5-devel)* = Files for PHP5 module development
  * *php5-pear* = PEAR - PHP Extension and Application Repository
  * *gcc* = GNU C Compiler
  * *make* = make utility

To install the above on a Zabbix appliance, login into the appliance as root (default password = zabbix) and run the following commands:
  * yast -i php5-devel
  * yast -i gcc
  * yast -i php5-pear
  * yast -i make

Now install the php MongoDB driver using the instructions at http://us2.php.net/manual/en/mongo.installation.php

In the case of the Zabbix appliance, run the the following pecl command:
  * pecl install mongo

After successful installation of the MongoDB driver, you need to "enable" it within php5. Edit the two files */etc/php5/cli/php.ini and /etc/php5/apache2/php.ini* and add a line to the "Dynamic Extensions" sections as shown below.

{{{
;;;;;;;;;;;;;;;;;;;;;;
; Dynamic Extensions ;
;;;;;;;;;;;;;;;;;;;;;;

extension=mongo.so
}}}


Ensure that the php MongoDB driver is setup and configured properly by testing out one of the sample php programs for MongoDB driver (http://us2.php.net/manual/en/mongo.tutorial.php).

Download the MongoDB Plugin shell script and php files and copy them into the /etc/zabbix/externalscripts directory on the Zabbix server. Make sure that the php script and shell script are made executable.

Next open up a browser and download the MongoDB Zabbix template.
Now login to the Zabbix frontend (user = admin, password = zabbix).

Navigate as follows: 
  * Configuration >> Templates
  * Click on the "Import Template" button on the top right-hand corner
  * In the "Import file" dialog box, browse/search/enter the filename of the Zabbix template that was downloaded
  * Upload the template

*_Now you are ready to start monitoring your MongoDB servers !_*


==Monitoring a MongoDB Environment (server or cluster)==
 
Follow these steps to start monitoring a MongoDB server 
  * login to the Zabbix front-end and navigate to *_Configuration >> Hosts_*
  * Click on *_Create Host_* button on the top right-hand corner. 
  * Fill in the details - where Name = your choice of name for the MongoDB server to be monitored
  * Next click on the *_Add_* button in the *_Linked templates_* section of the screen.
  * You will see a list of templates - select the template *_Template_MongoDB_*

In the Macros section, add the following two macros -
*{$SERVER}* and *{$PORT}*

The value for {$SERVER} should be the hostname or IP address for your mongod or mongos process to be monitored.

The value for {$PORT} should be the port number for your mongod or mongos process (it is required even if the default port is used).

*Note that in a sharded and/or replicated MongoDB environment, you need to monitor only ONE of the mongos process*. However that process needs to be aware of the entire Mongo environment - i.e. all the shards and all the replicas within each replicaset. 

Save the configuration and Zabbix should start collecting data within 60 seconds.

Data is collected by the template at intervals of 60 seconds for each monitored MonogoDB server/environment.